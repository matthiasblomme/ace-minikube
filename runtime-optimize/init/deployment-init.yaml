apiVersion: apps/v1
kind: Deployment
metadata:
  name: ace-init-prep
spec:
  replicas: 1
  selector:
    matchLabels: { app: ace-init-prep }
  template:
    metadata:
      labels: { app: ace-init-prep }
    spec:
      terminationGracePeriodSeconds: 30
      volumes:
        - name: server-work
          emptyDir: {}
      initContainers:
        - name: prep
          image: ace-init:13.0.4.0
          imagePullPolicy: IfNotPresent
          env: [{ name: LICENSE, value: "accept" }]
          volumeMounts:
            - { name: server-work, mountPath: /home/aceuser/ace-server }
          command: ["/bin/bash","-lc"]
          args: ["/scripts/warmup.sh"]
          resources:
            requests:
              cpu: "150m"
              memory: "750Mi"
      containers:
        - name: runtime
          image: ace-init:13.0.4.0
          imagePullPolicy: IfNotPresent
          env:
            - { name: LICENSE, value: "accept" }
            - { name: ACE_SERVER_NAME, value: "ace-server" }
          volumeMounts:
            - { name: server-work, mountPath: /home/aceuser/ace-server }
          ports:
            - { containerPort: 7600, name: admin }
            - { containerPort: 7800, name: http }
          readinessProbe:
            tcpSocket: { port: admin }
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 30
          resources:
            requests:
              cpu: "150m"
              memory: "750Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: ace-init-prep
spec:
  selector: { app: ace-init-prep }
  ports:
    - { name: admin, port: 7600, targetPort: 7600 }
    - { name: http,  port: 7800, targetPort: 7800 }
